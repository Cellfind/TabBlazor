@using TabBlazor.Dashboards

<Dashboard TItem=Order Items="orders" OnUpdate="DashboardUpdated">
    <h2 class="page-title mb-2">
        Dashboard
    </h2>

    <Row>
        <RowCol Lg="2">
            <Card class="h-100">
                <CardBody>
                    <EqualFacet TItem=Order Expression="e=> e.OrderType.ToString()" Name="Order Type:" />
                    <EqualFacet TItem=Order Expression="e=> e.OrderStatus.ToString()" Name="Order Status:" />
                    <EqualFacet TItem=Order Expression="e=> e.Country" Name="Country:" />
                    <GroupFacet TItem=Order Expression="e=> e.NetValue" Name="Net Value:" />
                    <RangeFilter TItem=Order Expression="e=> e.DiscountPrecentage" Name="Discount %" />
                    <DateFacet TItem=Order Expression="e=> e.OrderDate.DateTime" Name="Order Date:" />
                </CardBody>
            </Card>
        
        </RowCol>
        <RowCol Lg=10>

            <Row class="row-deck row-cards">
                <RowCol Sm="6" Lg="3">
                    <Card Size="CardSize.Small">
                        <CardBody>
                            <div class="row align-items-center">
                                <RowCol Auto>
                                    <span class="bg-primary text-white avatar">
                                        <Icon IconType="TablerIcons.Currency_dollar" />
                                    </span>
                                </RowCol>

                                <div class="col">
                                    <div class="font-weight-medium">
                                        @context.FilteredItems.Sum(e=> e.NetValue).ToString("c0") Net Sales
                                    </div>
                                    <div class="text-muted">
                                        @context.FilteredItems.Sum(e=> e.GrossValue).ToString("c0") Gross Sales
                                    </div>
                                </div>
                            </div>
                        </CardBody>
                    </Card>
                </RowCol>

                <RowCol Sm="6" Lg="3">
                    <Card Size="CardSize.Small">
                        <CardBody>
                            <div class="row align-items-center">
                                <RowCol Auto>
                                    <span class="bg-success text-white avatar">
                                        <Icon IconType="TablerIcons.Shopping_cart" />
                                    </span>
                                </RowCol>

                                <div class="col">
                                    <div class="font-weight-medium">
                                        @context.FilteredItems.Count().ToString("n0") Orders
                                    </div>
                                    <div class="text-muted">
                                        @context.FilteredItems.Where(e=> e.OrderStatus == OrderStatus.Cancelled).Count().ToString("n0") Cancelled
                                    </div>
                                </div>
                            </div>
                        </CardBody>
                    </Card>
                </RowCol>

                <RowCol Sm="6" Lg="3">
                    <Card Size="CardSize.Small">
                        <CardBody>
                            <div class="row align-items-center">
                                <RowCol Auto>
                                    <span class="bg-azure text-white avatar">
                                        <Icon IconType="TablerIcons.Users" />
                                    </span>
                                </RowCol>

                                <div class="col">
                                    <div class="font-weight-medium">
                                        @context.FilteredItems.DistinctBy(e=> e.Customer.CustomerId).Count().ToString("n0") Customers
                                    </div>
                                    <div class="text-muted">
                                        @context.FilteredItems.DistinctBy(e=> e.Country).Count().ToString("n0") Countries
                                     </div>
                                </div>
                            </div>
                        </CardBody>
                    </Card>
                </RowCol>

                <RowCol Sm="6" Lg="3">
                    <Card Size="CardSize.Small">
                        <CardBody>
                            <div class="row align-items-center">
                                <RowCol Auto>
                                    <span class="bg-yellow text-white avatar">
                                        <Icon IconType="TablerIcons.Star" />
                                    </span>
                                </RowCol>

                                <div class="col">
                                    @{
                                        var topCustomer = @context.FilteredItems.GroupBy(e => e.Customer).Select(e => new { Customer = e.Key, Value = e.Aggregate(0.0M, (current, order) => current + order.NetValue) }).OrderByDescending(e => e.Value).FirstOrDefault();

                                        <div class="font-weight-medium">
                                        @topCustomer?.Customer.CustomerName
                                        </div>
                                        <div class="text-muted">
                                             @topCustomer?.Value.ToString("n0")
                                        </div>

                                    }

                                  
                                </div>
                            </div>
                        </CardBody>
                    </Card>
                </RowCol>

                <RowCol>

                    <Card>

                        <CardBody>
                            <h3 class="card-title">Orders Value</h3>
                            <ApexChart @ref=chart TItem="Order"
                                       XAxisType="XAxisType.Datetime" Height="200" Options="chartOptions">

                                <ApexPointSeries TItem="Order"
                                                 Items="context.FilteredItems"
                                                 Name="Gross Value"
                                                 SeriesType="SeriesType.Bar"
                                                 XValue="@(e => e.OrderDate.FirstDayOfMonth())"
                                                 YAggregate="@(e => e.Sum(e => e.GrossValue))"
                                                 OrderBy="e=>e.X" />

                                <ApexPointSeries TItem="Order"
                                                 Items="context.FilteredItems"
                                                 Name="Net Value"
                                                 SeriesType="SeriesType.Bar"
                                                 XValue="@(e => e.OrderDate.FirstDayOfMonth())"
                                                 YAggregate="@(e => e.Sum(e => e.NetValue))"
                                                 OrderBy="e=>e.X" />

                            </ApexChart>
                        </CardBody>

                    </Card>



                </RowCol>

                <RowCol>

                    <Table PageSize=5 Item="Order" Items="context.FilteredItems?.ToList()">
                        <Column Item="Order" Property="e=>e.Customer.CustomerName" Searchable Sortable />
                        <Column Item="Order" Property="e=>e.OrderDate" Searchable Sortable >
                        <Template Context="order">
                                @order.OrderDate.ToString("d")
                        </Template>    
                        </Column>
                        <Column Item="Order" Property="e=>e.Country" Searchable Sortable />
                        <Column Item="Order" Property="e=>e.OrderType" Searchable Sortable />
                        <Column Item="Order" Property="e=>e.OrderStatus" Searchable Sortable />
                        <Column Item="Order" Property="e=>e.NetValue" Searchable Sortable>
                            <Template Context="order">
                                @order.NetValue.ToString("c")
                            </Template>
                        </Column>
                    </Table>

                </RowCol>
            </Row>



        </RowCol>
    </Row>





</Dashboard>

@code {
    private List<Order> orders = SampleData.GetOrders();
    private ApexChart<Order> chart;
    private ApexChartOptions<Order> chartOptions = new();

    protected override void OnInitialized()
    {
        chartOptions.Theme = new Theme { Palette = PaletteType.Palette6 };
        chartOptions.Chart.Toolbar = new Toolbar { Show = false };
        chartOptions.Yaxis = new List<YAxis> { new YAxis { DecimalsInFloat = 0 } };
    }

    private async Task DashboardUpdated()
    {
        await Task.Yield();
        await chart?.UpdateSeriesAsync(true);

    }


    private (Customer, decimal) GetTopCustomer(IEnumerable<Order> orders)
    {
        var test = orders.GroupBy(e => e.Customer)
        .Select(e => new { Customer = e.Key, Value = e.Aggregate(0.0M, (current, order) => current + order.NetValue) })
        .OrderByDescending(e => e.Value).FirstOrDefault();
        ;

       // var tt = orders.Min(e => e.NetValue);

        return (test.Customer, test.Value);

    }

}
