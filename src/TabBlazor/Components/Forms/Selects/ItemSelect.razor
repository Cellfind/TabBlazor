@namespace TabBlazor
@inherits TablerBaseComponent
@typeparam TItem
@typeparam TValue

@if (!string.IsNullOrWhiteSpace(Label))
{
    <label class="form-label">@Label</label>
}

<Dimmer Active="Disabled" ShowSpinner="false">
    <Dropdown @ref="dropdown" CloseOnClick="false">
        <ChildContent>
            @if (SelectedTemplate != null)
            {
                @SelectedTemplate(selectedItems)
            }
            else
            {
                <div class="input-group input-group-flat">
                    <div class="form-control form-select">
                        @if (!selectedItems.Any())
                        {
                            @NoSelectedText
                        }
                        else if (singleSelect)
                        {
                            <span>@GetSelectedText(selectedItems.First())</span>
                        }
                        else
                        {
                            @foreach (var selectedItem in selectedItems)
                            {
                                <Badge class="me-2" BackgroundColor="TablerColor.Primary">@GetSelectedText(selectedItem) <span @onclick:stopPropagation @onclick="@(e=> RemoveSelected(selectedItem))"><Icon class="ms-2" Size="16" Elements="@InternalIcons.X"></Icon></span></Badge>
                            }
                        }
                    </div>

                    @if (Clearable)
                    {
                        <span class="input-group-text" @onclick:stopPropagation @onclick="ClearSelected">
                            <Icon class="icon cursor-pointer" Elements="@InternalIcons.X" />
                        </span>
                    }
                </div>
            }

        </ChildContent>

        <DropdownTemplate>
            <DropdownMenu>
                @if (Items != null && Items.Any())
                {
                    @if (showSearch)
                    {
                        <div class="m-2">

                     

                            <div class="input-group input-group-flat">
                                <input class="form-control" @bind="searchText" type="text" @bind:event="oninput" placeholder="@SearchPlaceholderText">

                                <span class="input-group-text">
                              
                                    @if (!string.IsNullOrWhiteSpace(searchText))
                                    {
                                        <Icon Elements="@InternalIcons.X" class="icon" OnClick="ClearSearch" />
                                    }
                                    else
                                    {
                                        <Icon Elements="@InternalIcons.Search" class="icon cursor-auto"  />
                                    }
                                </span>
                            </div>
                        </div>
                    }

                    <div style="@(string.IsNullOrWhiteSpace(MaxListHeight) ? "": $"max-height:{MaxListHeight};overflow-y:auto")">
                        @foreach (var item in FilteredList())
                        {
                            <DropdownItem Active="IsSelected(item)" Disabled="!CanSelect() && !IsSelected(item)" OnClick="(e=> ToogleSelected(item))" @key="item">
                                @if (ListTemplate != null)
                                {
                                    @if (ShowCheckBoxes)
                                    {
                                        <input class="form-check-input m-0 me-2" checked="@IsSelected(item)" type="checkbox">
                                    }
                                    @ListTemplate(item)
                                }
                                else if (!string.IsNullOrEmpty(NoItemsText))
                                {
                                    <span>@NoItemsText</span>
                                }
                            </DropdownItem>
                        }
                    </div>
                }
                else
                {
                    <span>No Items</span>
                }
                <div class="cursor-auto">
                    @FooterTemplate
                </div>


            </DropdownMenu>
        </DropdownTemplate>
    </Dropdown>
</Dimmer>